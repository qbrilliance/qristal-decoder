variables:
  CI_IMAGE: quantumbrilliance/ci-ubuntu20.04:sdk-beta-18

stages:
  - build
  - test

.install_core:
  before_script:
    - whoami
    - echo $PWD
    - ls *
    - export ARTEFACTS_DIR=$PWD/../core
    # The state of the runner is persistent outside the working dir, do delete any previous core dirs.
    - rm -rf $ARTEFACTS_DIR $QB_DIR/core-local
    - mv core_artefacts $ARTEFACTS_DIR
    - cmake --install $ARTEFACTS_DIR/build

ubuntu20-build-triggered-from-upstream:
  stage: build
  image: $CI_IMAGE
  extends: .install_core
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  needs:
    - project: qbau/software-and-apps/core
      job: ubuntu20-build
      ref: $UPSTREAM_REF
      artifacts: true
  script:
    - echo Using core branch $UPSTREAM_REF
    - cmake -B build . -Dqbcore_DIR=${QB_DIR}/core-local
    - cmake --build build
    - rm -rf $QB_DIR/core $QB_DIR/core-local
  artifacts:
    when: always
    paths:
      - build/CITests_decoder
      - build/cmake_install.cmake
      - build/lib*

ubuntu20-cpp-tests-triggered-from-upstream:
  stage: test
  extends: .install_core
  image: $CI_IMAGE
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  needs:
    - "ubuntu20-build-triggered-from-upstream"
    - project: qbau/software-and-apps/core
      job: ubuntu20-build
      ref: $UPSTREAM_REF
      artifacts: true
  script:
    - echo Using core branch $UPSTREAM_REF
    - cmake --install build
    - timeout 1m ./build/CITests_decoder --test --gtest_output='xml:decoder_gtests.xml' || true #TODO fix test and remove timeout
    - rm -rf $QB_DIR/core $QB_DIR/core-local
      #artifacts:
      #  when: always
      #  reports:
      #    junit: decoder_gtests.xml

ubuntu20-build-triggered-locally:
  stage: build
  image: $CI_IMAGE
  extends: .install_core
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE != "pipeline"
  needs:
    - project: qbau/software-and-apps/core
      job: ubuntu20-build
      ref: main
      artifacts: true
  script:
    - cmake -B build . -Dqbcore_DIR=${QB_DIR}/core-local
    - cmake --build build
    - rm -rf $QB_DIR/core $QB_DIR/core-local
  artifacts:
    when: always
    paths:
      - build/CITests_decoder
      - build/cmake_install.cmake
      - build/lib*

ubuntu20-cpp-tests-triggered-locally:
  stage: test
  extends: .install_core
  image: $CI_IMAGE
  tags: 
    - docker-heavy
  rules:
    - if: $CI_PIPELINE_SOURCE != "pipeline"
  needs:
    - "ubuntu20-build-triggered-locally"
    - project: qbau/software-and-apps/core
      job: ubuntu20-build
      ref: main
      artifacts: true
  script:
    - cmake --install build
    - timeout 1m ./build/CITests_decoder --test --gtest_output='xml:decoder_gtests.xml' || true #TODO fix test and remove timeout
    - rm -rf $QB_DIR/core $QB_DIR/core-local
      #artifacts:
      #  when: always
      #  reports:
      #    junit: decoder_gtests.xml
